<?php

//Fibonacci
// 1,2,3,5,8,13,21,34....

include "printProblem.php";
include "printSolution.php";


    printProblem('Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
                    By starting with 1 and 2, the first 10 terms will be:
                        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
                    By considering the terms in the Fibonacci sequence whose values do not exceed 
                    four million, find the sum of the even-valued terms.
                ');

// sum of even terms will be equal to half of sum of complete series +1
// as every even term is equal to the sum of previous two odd terms
// sum of the series upto n terms is equal to f(n+2) - 2   

    function solution($max)
    {
        $f1 = 1;
        $f2 = 2;
        while ($f2 < $max) {
            $temp = $f2;
            $f2 = $f2 + $f1;
            $f1 = $temp;
        }

        //$f2 is the highest fibonnaci number less than 4 mil
        $result = 0;

        if($f2%2 > 0 and $f1%2 > 0){
            $result = (($f2-2)+1)/2;
        }
        else if($f1%2 == 0){
            $result = (($f2+$f1-2)+1)/2;
        }
        else if($f2%2 == 0){
            $result = ((2*$f2+$f1-2)+1)/2;
        }

        $solution = array();
        $solution['complexity'] = "O(log(n))";
        $solution['result'] = $result;

        return $solution;
    }

    printSolution(solution(4000000));

?>
